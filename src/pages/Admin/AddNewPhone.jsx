import { useState, useRef } from "react";
import { InputText } from "primereact/inputtext";
import { Button } from "primereact/button";
import { Toast } from "primereact/toast";
import axios from "axios";

export default function AddNewPhone() {
  const toast = useRef(null);

  const [phoneData, setPhoneData] = useState({
    productName: "",
    oldPrice: "",
    newPrice: "",
    branch: "",
    image: "",
    productDescription: "",
    stock: "",
  });

  const [specification, setSpecification] = useState({
    thumbnails: "",
    outstandingFeatures: "",
    camera: "",
    model: "",
    colour: "",
    weight: "",
    video: "",
    cameraTrueDepth: "",
    chargingConnectivity: "",
    battery: "",
    country: "",
    company: "",
    guarantee: "",
    waterResistant: "",
    cameraFeatures: "",
    gpu: "",
    pin: "",
    chargingSupport: "",
    networkSupport: "",
    wifi: "",
    bluetooth: "",
    gps: "",
    chargingTechnology: "",
    fingerprintSensor: "",
    specialFeatures: "",
    rearCamera: "",
    frontCamera: "",
    sim: "",
    sensor: "",
    ram: "",
    cpu: "",
    nfc: "",
    chip: "",
    screenResolution: "",
    screenFeatures: "",
    internalMemory: "",
    batteryCapacity: "",
    screenSize: "",
    screen: "",
    operatingSystem: "",
  });

  //H√†m ki·ªÉm tra validate
  const priceRegex = /^\d{1,3}(\.\d{3})*ƒë$/;

  const validateForm = () => {
    if (!phoneData.productName) {
      showToast("error", "L·ªói", "T√™n ƒëi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return false;
    }
    if (!phoneData.oldPrice) {
      showToast("error", "L·ªói", "Gi√° c≈© kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return false;
    }
    if (!priceRegex.test(phoneData.oldPrice)) {
      showToast(
        "error",
        "L·ªói",
        "Gi√° c≈© ph·∫£i c√≥ ƒë·ªãnh d·∫°ng ƒë√∫ng, v√≠ d·ª•: 5.000.000ƒë ho·∫∑c 300.000ƒë!"
      );
      return false;
    }
    if (!phoneData.newPrice) {
      showToast("error", "L·ªói", "Gi√° m·ªõi kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return false;
    }
    if (!priceRegex.test(phoneData.newPrice)) {
      showToast(
        "error",
        "L·ªói",
        "Gi√° m·ªõi ph·∫£i c√≥ ƒë·ªãnh d·∫°ng ƒë√∫ng, v√≠ d·ª•: 5.000.000ƒë ho·∫∑c 300.000ƒë!"
      );
      return false;
    }
    if (!phoneData.branch) {
      showToast("error", "L·ªói", "H√£ng s·∫£n xu·∫•t kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return false;
    }
    if (!phoneData.image) {
      showToast("error", "L·ªói", "Vui l√≤ng nh·∫≠p ƒë∆∞·ªùng d·∫´n h√¨nh ·∫£nh!");
      return false;
    }
    if (!phoneData.productDescription) {
      showToast("error", "L·ªói", "M√¥ t·∫£ s·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return false;
    }
    if (!phoneData.stock || isNaN(phoneData.stock) || phoneData.stock < 0) {
      showToast("error", "L·ªói", "S·ªë l∆∞·ª£ng kho ph·∫£i l√† s·ªë v√† kh√¥ng √¢m!");
      return false;
    }
    return true;
  };

  //Hi·ªÉn th·ªã th√¥ng b√°o b·∫±ng Toast
  const showToast = (severity, summary, detail) => {
    toast.current.show({ severity, summary, detail, life: 3000 });
  };

  const handleSubmit = async () => {
    if (!validateForm()) return;

    try {
      // G·ª≠i y√™u c·∫ßu th√™m m·ªõi s·∫£n ph·∫©m (POST)
      const productResponse = await axios.post(
        "https://localhost:7274/api/admin/AdminProduct",
        phoneData
      );

      // L·∫•y id c·ªßa s·∫£n ph·∫©m v·ª´a ƒë∆∞·ª£c t·∫°o
      const newProductId = productResponse.data.id;

      // G·ª≠i y√™u c·∫ßu th√™m m·ªõi specification v·ªõi productId v·ª´a t·∫°o
      await axios.post("https://localhost:7274/api/admin/AdminSpecification", {
        ...specification,
        productId: newProductId,
      });

      // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
      showToast("success", "Th√†nh c√¥ng", "S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m!");

      // ‚úÖ Reset l·∫°i form sau khi th√™m th√†nh c√¥ng
      setPhoneData({
        productName: "",
        oldPrice: "",
        newPrice: "",
        branch: "",
        image: "",
        productDescription: "",
        stock: "",
      });

      setSpecification({
        thumbnails: "",
        outstandingFeatures: "",
        camera: "",
        model: "",
        colour: "",
        weight: "",
        video: "",
        cameraTrueDepth: "",
        chargingConnectivity: "",
        battery: "",
        country: "",
        company: "",
        guarantee: "",
        waterResistant: "",
        cameraFeatures: "",
        gpu: "",
        pin: "",
        chargingSupport: "",
        networkSupport: "",
        wifi: "",
        bluetooth: "",
        gps: "",
        chargingTechnology: "",
        fingerprintSensor: "",
        specialFeatures: "",
        rearCamera: "",
        frontCamera: "",
        sim: "",
        sensor: "",
        ram: "",
        cpu: "",
        nfc: "",
        chip: "",
        screenResolution: "",
        screenFeatures: "",
        internalMemory: "",
        batteryCapacity: "",
        screenSize: "",
        screen: "",
        operatingSystem: "",
      });
    } catch (error) {
      console.error("L·ªói khi th√™m s·∫£n ph·∫©m:", error);
      showToast("error", "L·ªói", "ƒê√£ x·∫£y ra l·ªói khi th√™m s·∫£n ph·∫©m.");
    }
  };

  return (
    <div className="p-6 max-w-3xl mx-auto bg-white shadow-lg rounded-xl">
      <Toast ref={toast} />

      <h2 className="text-2xl font-bold text-gray-700 mb-6 text-center">
        üì± Th√™m ƒëi·ªán tho·∫°i
      </h2>

      <div className="flex flex-col gap-4">
        <label>T√™n ƒëi·ªán tho·∫°i</label>
        <InputText
          value={phoneData.productName}
          onChange={(e) =>
            setPhoneData({ ...phoneData, productName: e.target.value })
          }
          placeholder="Nh·∫≠p t√™n ƒëi·ªán tho·∫°i"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Gi√° c≈© (VND)</label>
        <InputText
          value={phoneData.oldPrice}
          onChange={(e) =>
            setPhoneData({ ...phoneData, oldPrice: e.target.value })
          }
          placeholder="Nh·∫≠p gi√° c≈©. V√≠ d·ª•: 5.000.000ƒë"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Gi√° m·ªõi (VND)</label>
        <InputText
          value={phoneData.newPrice}
          onChange={(e) =>
            setPhoneData({ ...phoneData, newPrice: e.target.value })
          }
          placeholder="Nh·∫≠p gi√° m·ªõi. V√≠ d·ª•: 6.000.000ƒë"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>H√£ng s·∫£n xu·∫•t</label>
        <InputText
          value={phoneData.branch}
          onChange={(e) =>
            setPhoneData({ ...phoneData, branch: e.target.value })
          }
          placeholder="Nh·∫≠p h√£ng s·∫£n xu·∫•t"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>H√¨nh ·∫£nh s·∫£n ph·∫©m (URL)</label>
        <InputText
          value={phoneData.image}
          onChange={(e) =>
            setPhoneData({ ...phoneData, image: e.target.value })
          }
          placeholder="Nh·∫≠p ƒë∆∞·ªùng d·∫´n h√¨nh ·∫£nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>M√¥ t·∫£ s·∫£n ph·∫©m</label>
        <InputText
          value={phoneData.productDescription}
          onChange={(e) =>
            setPhoneData({ ...phoneData, productDescription: e.target.value })
          }
          placeholder="Nh·∫≠p m√¥ t·∫£ s·∫£n ph·∫©m"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>S·ªë l∆∞·ª£ng trong kho</label>
        <InputText
          value={phoneData.stock}
          onChange={(e) =>
            setPhoneData({ ...phoneData, stock: e.target.value })
          }
          placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        {/* Th√¥ng s·ªë k·ªπ thu·∫≠t */}
        <label>·∫¢nh Thumbnail</label>
        <InputText
          value={specification.thumbnails || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              thumbnails: e.target.value,
            })
          }
          placeholder="Nh·∫≠p URL ·∫£nh thumbnail"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t</label>
        <InputText
          value={specification.outstandingFeatures || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              outstandingFeatures: e.target.value,
            })
          }
          placeholder="Nh·∫≠p ƒë·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Camera</label>
        <InputText
          value={specification.camera || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              camera: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë camera"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Model</label>
        <InputText
          value={specification.model || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              model: e.target.value,
            })
          }
          placeholder="Nh·∫≠p model"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>M√†u s·∫Øc</label>
        <InputText
          value={specification.colour || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              colour: e.target.value,
            })
          }
          placeholder="Nh·∫≠p m√†u s·∫Øc"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Tr·ªçng l∆∞·ª£ng</label>
        <InputText
          value={specification.weight || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              weight: e.target.value,
            })
          }
          placeholder="Nh·∫≠p tr·ªçng l∆∞·ª£ng"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Video</label>
        <InputText
          value={specification.video || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              video: e.target.value,
            })
          }
          placeholder="Nh·∫≠p video"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Camera TrueDepth</label>
        <InputText
          value={specification.cameraTrueDepth || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              cameraTrueDepth: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë camera TrueDepth"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C·ªïng s·∫°c & k·∫øt n·ªëi</label>
        <InputText
          value={specification.chargingConnectivity || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              chargingConnectivity: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë s·∫°c v√† k·∫øt n·ªëi"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Pin</label>
        <InputText
          value={specification.battery || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              battery: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë pin"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Th∆∞∆°ng hi·ªáu</label>
        <InputText
          value={specification.country || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              country: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th∆∞∆°ng hi·ªáu"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C√¥ng ty s·∫£n xu·∫•t</label>
        <InputText
          value={specification.company || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              company: e.target.value,
            })
          }
          placeholder="Nh·∫≠p c√¥ng ty s·∫£n xu·∫•t"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>B·∫£o h√†nh</label>
        <InputText
          value={specification.guarantee || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              guarantee: e.target.value,
            })
          }
          placeholder="Nh·∫≠p b·∫£o h√†nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Kh√°ng n∆∞·ªõc & b·ª•i</label>
        <InputText
          value={specification.waterResistant || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              waterResistant: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë kh√°ng n∆∞·ªõc & b·ª•i"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>T√≠nh nƒÉng camera</label>
        <InputText
          value={specification.cameraFeatures || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              cameraFeatures: e.target.value,
            })
          }
          placeholder="Nh·∫≠p t√≠nh nƒÉng camera"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>GPU</label>
        <InputText
          value={specification.gpu || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              gpu: e.target.value,
            })
          }
          placeholder="Nh·∫≠p GPU"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Lo·∫°i Pin</label>
        <InputText
          value={specification.pin || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              pin: e.target.value,
            })
          }
          placeholder="Nh·∫≠p lo·∫°i pin"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>H·ªó tr·ª£ s·∫°c t·ªëi ƒëa</label>
        <InputText
          value={specification.chargingSupport || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              chargingSupport: e.target.value,
            })
          }
          placeholder="Nh·∫≠p h·ªó tr·ª£ s·∫°c t·ªëi ƒëa"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>H·ªó tr·ª£ m·∫°ng</label>
        <InputText
          value={specification.networkSupport || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              networkSupport: e.target.value,
            })
          }
          placeholder="Nh·∫≠p h·ªó tr·ª£ m·∫°ng"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Wi-Fi</label>
        <InputText
          value={specification.wifi || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              wifi: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë Wi-Fi"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Bluetooth</label>
        <InputText
          value={specification.bluetooth || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              bluetooth: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë Bluetooth"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>GPS</label>
        <InputText
          value={specification.gps || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              gps: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë GPS"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C√¥ng ngh·ªá s·∫°c</label>
        <InputText
          value={specification.chargingTechnology || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              chargingTechnology: e.target.value,
            })
          }
          placeholder="Nh·∫≠p c√¥ng ngh·ªá s·∫°c"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C·∫£m bi·∫øn v√¢n tay</label>
        <InputText
          value={specification.fingerprintSensor || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              fingerprintSensor: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë c·∫£m bi·∫øn v√¢n tay"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>T√≠nh nƒÉng ƒë·∫∑c bi·ªát</label>
        <InputText
          value={specification.specialFeatures || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              specialFeatures: e.target.value,
            })
          }
          placeholder="Nh·∫≠p t√≠nh nƒÉng ƒë·∫∑c bi·ªát"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Camera sau</label>
        <InputText
          value={specification.rearCamera || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              rearCamera: e.target.value,
            })
          }
          placeholder="Nh·∫≠p camera sau"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Camera tr∆∞·ªõc</label>
        <InputText
          value={specification.frontCamera || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              frontCamera: e.target.value,
            })
          }
          placeholder="Nh·∫≠p camera tr∆∞·ªõc"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>SIM</label>
        <InputText
          value={specification.sim || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              sim: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë SIM"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C·∫£m bi·∫øn</label>
        <InputText
          value={specification.sensor || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              sensor: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë c·∫£m bi·∫øn"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>RAM</label>
        <InputText
          value={specification.ram || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              ram: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë RAM"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>CPU</label>
        <InputText
          value={specification.cpu || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              cpu: e.target.value,
            })
          }
          placeholder="Nh·∫≠p CPU"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>C√¥ng ngh·ªá NFC</label>
        <InputText
          value={specification.nfc || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              nfc: e.target.value,
            })
          }
          placeholder="Nh·∫≠p c√¥ng ngh·ªá NFC"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Chip</label>
        <InputText
          value={specification.chip || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              chip: e.target.value,
            })
          }
          placeholder="Nh·∫≠p th√¥ng s·ªë chip"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>ƒê·ªô ph√¢n gi·∫£i m√†n h√¨nh</label>
        <InputText
          value={specification.screenResolution || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              screenResolution: e.target.value,
            })
          }
          placeholder="Nh·∫≠p ƒë·ªô ph√¢n gi·∫£i m√†n h√¨nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>T√≠nh nƒÉng m√†n h√¨nh</label>
        <InputText
          value={specification.screenFeatures || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              screenFeatures: e.target.value,
            })
          }
          placeholder="Nh·∫≠p t√≠nh nƒÉng m√†n h√¨nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>B·ªô nh·ªõ trong</label>
        <InputText
          value={specification.internalMemory || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              internalMemory: e.target.value,
            })
          }
          placeholder="Nh·∫≠p b·ªô nh·ªõ trong"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>Dung l∆∞·ª£ng pin</label>
        <InputText
          value={specification.batteryCapacity || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              batteryCapacity: e.target.value,
            })
          }
          placeholder="Nh·∫≠p dung l∆∞·ª£ng pin"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>K√≠ch th∆∞·ªõc m√†n h√¨nh</label>
        <InputText
          value={specification.screenSize || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              screenSize: e.target.value,
            })
          }
          placeholder="Nh·∫≠p k√≠ch th∆∞·ªõc m√†n h√¨nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>M√†n h√¨nh</label>
        <InputText
          value={specification.screen || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              screen: e.target.value,
            })
          }
          placeholder="Nh·∫≠p lo·∫°i m√†n h√¨nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        <label>H·ªá ƒëi·ªÅu h√†nh</label>
        <InputText
          value={specification.operatingSystem || ""}
          onChange={(e) =>
            setSpecification({
              ...specification,
              operatingSystem: e.target.value,
            })
          }
          placeholder="Nh·∫≠p h·ªá ƒëi·ªÅu h√†nh"
          className="p-inputtext-lg border border-gray-300 rounded-lg w-full px-4 py-3"
        />

        {/* N√∫t l∆∞u */}
        <Button
          label="Th√™m s·∫£n ph·∫©m"
          onClick={handleSubmit}
          className="p-button-lg bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 rounded-lg w-full"
        />
      </div>
    </div>
  );
}
